CREATE SCHEMA IF NOT exists COMPANY_ATT0;
-- RESTRIÇÃO ATRIBUIDA  A UM DOMINIO
-- CREATE DOMAIN D_NUM AS INT CHECK(D_NUM > 0  AND D_NUM < 21);

select * from  information_schema.table_constraints
	where  constraint_schema = 'COMPANY_ATT0';

SHOW DATABASES;    
USE COMPANY_ATT0;
SHOW TABLES;

CREATE TABLE COMPANY_ATT0.EMPLOYEE(
	FNAME VARCHAR(15) NOT NULL,
	MINIT char,
	LNAME VARCHAR(15) NOT NULL,
	SSN CHAR(9) NOT NULL,
	BDATE DATE,
	ADDRESS VARCHAR(30),
	SEX ENUM('M', 'F'),
	SALARY DECIMAL(10, 2),
	SUPER_SSN CHAR(9),
	DNO INT NOT NULL,
    constraint CHK_SALARY_EPLOYEE check (SALARY > 2000.0),
	constraint PK_EMPLOYEE_SSN PRIMARY KEY (SSN)
);
USE COMPANY_ATT0;

desc EMPLOYEE;

CREATE TABLE DEPARTAMENT (
	DNAME VARCHAR(15) NOT NULL,
    DNUMBER INT NOT NULL,
    MGR_SSN CHAR(9),
    MGR_START_DATE DATE,
    DEPT_CREATE_DATE date,
    CONSTRAINT CHK_DATE_DEPT check(DEPT_CREATE_DATE < MGR_START_DATE),
    constraint PK_DEPT PRIMARY KEY (DNUMBER),
    constraint UNIQUE_NAME_DEPT UNIQUE (DNAME),
    CONSTRAINT FK_DEPARTAMENT_EMPLOYEE foreign key (MGR_SSN) references EMPLOYEE(SSN)
);
CREATE TABLE DEP_LOCATIONS(
	DNUMBER INT NOT NULL,
    DLOCATION varchar(15) NOT NULL,
    CONSTRAINT PK_DEPT_LOCATIONS primary key (DNUMBER, DLOCATION),
    CONSTRAINT FK_DEPT_LOCATIONS_DEPARTMENT foreign key (DNUMBER) references DEPARTAMENT(DNUMBER)
);

CREATE TABLE PROJECT(
	PNAME varchar(15) NOT NULL,
	PNUMBER INT NOT NULL,
    PLOCATION VARCHAR(15),
    DNUM INT NOT NULL,
    CONSTRAINT PK_PROJECT primary key (PNUMBER),
    CONSTRAINT UNIQUE_PROJECT UNIQUE (PNAME),
    CONSTRAINT FK_PROJECT_DEPARTAMENT foreign key (DNUM) references DEPARTAMENT(DNUMBER)
);
CREATE TABLE WORKS_ON(
	ESSN CHAR(9) NOT NULL,
    PNO INT NOT NULL,
    HOURS DECIMAL(3,1) NOT NULL,
    CONSTRAINT PK_WORKS_ON primary key (ESSN, PNO),
    CONSTRAINT FK_WORKS_ON_EMPLOYEE foreign key (ESSN) references EMPLOYEE(SSN),
    CONSTRAINT FK_WORKS_ON_PROJECT foreign key (PNO) references PROJECT(PNUMBER)
);

CREATE TABLE DEPENDENT(
	ESSN CHAR(9) not null,
    DEPENDENT_NAME VARCHAR(15) NOT NULL,
    SEX_DEPENDENT CHAR,  -- F OU M
    BDATE DATE,
    RELATIONSHIP varchar(8),
    AGE INT NOT NULL,
    CONSTRAINT CHK_AGE_DEPEDENT CHECK (AGE < 22),
    CONSTRAINT PK_DEPENDENT primary key (ESSN, DEPENDENT_NAME),
    CONSTRAINT FK_DEPENTE_EMPLOYEE foreign key (ESSN) references EMPLOYEE(SSN)
);
ALTER TABLE DEPARTAMENT DROP CONSTRAINT FK_DEPARTAMENT_EMPLOYEE;
-------------------------------------------------------------------------
ALTER TABLE DEPARTAMENT DROP CONSTRAINT FK_DEP;
ALTER TABLE DEPARTAMENT
	ADD CONSTRAINT FK_DEPT foreign key(MRG_SSN) references EMPLOYEE(SSN)
	ON UPDATE CASCADE;
 ---------------------------------------------------------------------------
 
DESC DEPARTAMENT;
SHOW TABLES;
desc WORKS_ON;

-- EXPRESSÕES E ALIAS 

-- RECOLHENDO O VALOR DO INSS-*

SELECT FNAME, LNAME, SALARY, SALARY * 0.011 FROM EMPLOYEE;
SELECT FNAME, LNAME, SALARY, SALARY * 0.011 AS INSS FROM EMPLOYEE;
SELECT FNAME, LNAME, SALARY, ROUND(SALARY * 0.011, 2) FROM EMPLOYEE;

-- DEFINIR UM AUMENTO DE SALÁRIO PARA OS GERENTES QUE TRABALHAM NO PROJETO ASSOCIADO AO PRODUTOX 

DESC PROJECT;
DESC WORKS_ON;

SELECT * 
	FROM EMPLOYEE E, WORKS_ON AS W, PROJECT AS P
    WHERE (E.SSN = W.ESSN AND W.PNO=P.PNUMBER);

SELECT CONCAT(FNAME,' ', LNAME) AS COMPLETE_NAME, SALARY, SALARY * 1.1 AS SALARY_INCREMENT
	FROM EMPLOYEE E, WORKS_ON AS W, PROJECT AS P
    WHERE (E.SSN = W.ESSN AND W.PNO=P.PNUMBER AND P.PNAME='PRODUTOX');

SELECT CONCAT(FNAME,' ', LNAME) AS COMPLETE_NAME, SALARY, ROUND(SALARY * 1.1, 1) AS SALARY_INCREMENT
	FROM EMPLOYEE E, WORKS_ON AS W, PROJECT AS P
    WHERE (E.SSN = W.ESSN AND W.PNO=P.PNUMBER AND P.PNAME='PRODUTOX');
    
select * from departament;
-- DEFININDO ALIAS PARA LEGIBILIDADE DA CONSULTA
SELECT * FROM EMPLOYEE;
SELECT concat(E.FNAME, ' ', E.LNAME) AS EMPLOYEEE_NAME, E.ADDRESS FROM EMPLOYEE E, DEPARTAMENT D WHERE D.DNAME = 'Reseach' AND D.DNUMBER = E.DNO;	